@model PagedList.IPagedList<CooksCorner.Models.WrittenTutorial>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
}

<div class="action-content">
    <h4 class="align-center">All Written Recipes</h4>

    <h4 class="btn btn-success">
        @Html.ActionLink("Create New", "Create")
    </h4>
    <div class="vertical-space-small"></div>
    <table>
        <tr>
            <th>Recipe Category
            </th>
            <th>Recipe Title
            </th>
            <th>Recipe Description
            </th>
            <th>Actions</th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td class="truncate-content">
                    <p>@Html.Raw(item.Description)</p>
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new {@class = "btn btn-success" }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }, new {@class = "btn btn-success" }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new {@class = "btn btn-danger" })
                </td>
            </tr>
        }

    </table>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    <div class="test-pagination">@Html.PagedListPager(Model, page => Url.Action("Index", new { page }))</div>
</div>
<script>
    $(document).ready(function () {
        $('.test-pagination .pagination').removeClass('pagination').addClass('pagination1');

    });
</script>
