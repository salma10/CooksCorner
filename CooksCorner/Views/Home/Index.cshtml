@model IEnumerable<CooksCorner.Models.Genre>

@{
    ViewBag.Title = "Index";
    
}

<div class="inner">
    <div class="main">
        <section id="content">
            <link href="~/Content/slider/slide.css" rel="stylesheet" />
            <script src="~/Content/slider/jssor.js"></script>
            <script src="~/Content/slider/jssor.slider.js"></script>
            <!--slider start-->


            <script>
                jssor_slider1_starter = function (containerId) {
                    var _CaptionTransitions = [];
                    _CaptionTransitions["L"] = { $Duration: 900, x: 0.6, $Easing: { $Left: $JssorEasing$.$EaseInOutSine }, $Opacity: 2 };
                    _CaptionTransitions["R"] = { $Duration: 900, x: -0.6, $Easing: { $Left: $JssorEasing$.$EaseInOutSine }, $Opacity: 2 };
                    _CaptionTransitions["T"] = { $Duration: 900, y: 0.6, $Easing: { $Top: $JssorEasing$.$EaseInOutSine }, $Opacity: 2 };
                    _CaptionTransitions["B"] = { $Duration: 900, y: -0.6, $Easing: { $Top: $JssorEasing$.$EaseInOutSine }, $Opacity: 2 };
                    _CaptionTransitions["ZMF|10"] = { $Duration: 900, $Zoom: 11, $Easing: { $Zoom: $JssorEasing$.$EaseOutQuad, $Opacity: $JssorEasing$.$EaseLinear }, $Opacity: 2 };
                    _CaptionTransitions["RTT|10"] = { $Duration: 900, $Zoom: 11, $Rotate: 1, $Easing: { $Zoom: $JssorEasing$.$EaseOutQuad, $Opacity: $JssorEasing$.$EaseLinear, $Rotate: $JssorEasing$.$EaseInExpo }, $Opacity: 2, $Round: { $Rotate: 0.8 } };
                    _CaptionTransitions["RTT|2"] = { $Duration: 900, $Zoom: 3, $Rotate: 1, $Easing: { $Zoom: $JssorEasing$.$EaseInQuad, $Opacity: $JssorEasing$.$EaseLinear, $Rotate: $JssorEasing$.$EaseInQuad }, $Opacity: 2, $Round: { $Rotate: 0.5 } };
                    _CaptionTransitions["RTTL|BR"] = { $Duration: 900, x: -0.6, y: -0.6, $Zoom: 11, $Rotate: 1, $Easing: { $Left: $JssorEasing$.$EaseInCubic, $Top: $JssorEasing$.$EaseInCubic, $Zoom: $JssorEasing$.$EaseInCubic, $Opacity: $JssorEasing$.$EaseLinear, $Rotate: $JssorEasing$.$EaseInCubic }, $Opacity: 2, $Round: { $Rotate: 0.8 } };
                    _CaptionTransitions["CLIP|LR"] = { $Duration: 900, $Clip: 15, $Easing: { $Clip: $JssorEasing$.$EaseInOutCubic }, $Opacity: 2 };
                    _CaptionTransitions["MCLIP|L"] = { $Duration: 900, $Clip: 1, $Move: true, $Easing: { $Clip: $JssorEasing$.$EaseInOutCubic } };
                    _CaptionTransitions["MCLIP|R"] = { $Duration: 900, $Clip: 2, $Move: true, $Easing: { $Clip: $JssorEasing$.$EaseInOutCubic } };

                    var options = {
                        $FillMode: 2,                                       //[Optional] The way to fill image in slide, 0 stretch, 1 contain (keep aspect ratio and put all inside slide), 2 cover (keep aspect ratio and cover whole slide), 4 actual size, 5 contain for large image, actual size for small image, default value is 0
                        $AutoPlay: true,                                    //[Optional] Whether to auto play, to enable slideshow, this option must be set to true, default value is false
                        $AutoPlayInterval: 4000,                            //[Optional] Interval (in milliseconds) to go for next slide since the previous stopped if the slider is auto playing, default value is 3000
                        $PauseOnHover: 1,                                   //[Optional] Whether to pause when mouse over if a slider is auto playing, 0 no pause, 1 pause for desktop, 2 pause for touch device, 3 pause for desktop and touch device, 4 freeze for desktop, 8 freeze for touch device, 12 freeze for desktop and touch device, default value is 1

                        $ArrowKeyNavigation: true,   			            //[Optional] Allows keyboard (arrow key) navigation or not, default value is false
                        $SlideEasing: $JssorEasing$.$EaseOutQuint,          //[Optional] Specifies easing for right to left animation, default value is $JssorEasing$.$EaseOutQuad
                        $SlideDuration: 800,                                //[Optional] Specifies default duration (swipe) for slide in milliseconds, default value is 500
                        $MinDragOffsetToSlide: 20,                          //[Optional] Minimum drag offset to trigger slide , default value is 20
                        //$SlideWidth: 600,                                 //[Optional] Width of every slide in pixels, default value is width of 'slides' container
                        //$SlideHeight: 300,                                //[Optional] Height of every slide in pixels, default value is height of 'slides' container
                        $SlideSpacing: 0, 					                //[Optional] Space between each slide in pixels, default value is 0
                        $DisplayPieces: 1,                                  //[Optional] Number of pieces to display (the slideshow would be disabled if the value is set to greater than 1), the default value is 1
                        $ParkingPosition: 0,                                //[Optional] The offset position to park slide (this options applys only when slideshow disabled), default value is 0.
                        $UISearchMode: 1,                                   //[Optional] The way (0 parellel, 1 recursive, default value is 1) to search UI components (slides container, loading screen, navigator container, arrow navigator container, thumbnail navigator container etc).
                        $PlayOrientation: 1,                                //[Optional] Orientation to play slide (for auto play, navigation), 1 horizental, 2 vertical, 5 horizental reverse, 6 vertical reverse, default value is 1
                        $DragOrientation: 1,                                //[Optional] Orientation to drag slide, 0 no drag, 1 horizental, 2 vertical, 3 either, default value is 1 (Note that the $DragOrientation should be the same as $PlayOrientation when $DisplayPieces is greater than 1, or parking position is not 0)

                        $CaptionSliderOptions: {                            //[Optional] Options which specifies how to animate caption
                            $Class: $JssorCaptionSlider$,                   //[Required] Class to create instance to animate caption
                            $CaptionTransitions: _CaptionTransitions,       //[Required] An array of caption transitions to play caption, see caption transition section at jssor slideshow transition builder
                            $PlayInMode: 1,                                 //[Optional] 0 None (no play), 1 Chain (goes after main slide), 3 Chain Flatten (goes after main slide and flatten all caption animations), default value is 1
                            $PlayOutMode: 3                                 //[Optional] 0 None (no play), 1 Chain (goes before main slide), 3 Chain Flatten (goes before main slide and flatten all caption animations), default value is 1
                        },

                        $BulletNavigatorOptions: {                          //[Optional] Options to specify and enable navigator or not
                            $Class: $JssorBulletNavigator$,                 //[Required] Class to create navigator instance
                            $ChanceToShow: 2,                               //[Required] 0 Never, 1 Mouse Over, 2 Always
                            $AutoCenter: 1,                                 //[Optional] Auto center navigator in parent container, 0 None, 1 Horizontal, 2 Vertical, 3 Both, default value is 0
                            $Steps: 1,                                      //[Optional] Steps to go for each navigation request, default value is 1
                            $Lanes: 1,                                      //[Optional] Specify lanes to arrange items, default value is 1
                            $SpacingX: 8,                                   //[Optional] Horizontal space between each item in pixel, default value is 0
                            $SpacingY: 8,                                   //[Optional] Vertical space between each item in pixel, default value is 0
                            $Orientation: 1                                 //[Optional] The orientation of the navigator, 1 horizontal, 2 vertical, default value is 1
                        },

                        $ArrowNavigatorOptions: {                       //[Optional] Options to specify and enable arrow navigator or not
                            $Class: $JssorArrowNavigator$,              //[Requried] Class to create arrow navigator instance
                            $ChanceToShow: 1,                               //[Required] 0 Never, 1 Mouse Over, 2 Always
                            $AutoCenter: 2,                                 //[Optional] Auto center arrows in parent container, 0 No, 1 Horizontal, 2 Vertical, 3 Both, default value is 0
                            $Steps: 1                                       //[Optional] Steps to go for each navigation request, default value is 1
                        }
                    };

                    var jssor_slider1 = new $JssorSlider$(containerId, options);

                    //responsive code begin
                    //you can remove responsive code if you don't want the slider scales while window resizes
                    function ScaleSlider() {
                        var bodyWidth = document.body.clientWidth;
                        if (bodyWidth)
                            jssor_slider1.$ScaleWidth(Math.min(bodyWidth, 1920));
                        else
                            $Jssor$.$Delay(ScaleSlider, 30);
                    }

                    ScaleSlider();
                    $Jssor$.$AddEvent(window, "load", ScaleSlider);

                    $Jssor$.$AddEvent(window, "resize", $Jssor$.$WindowResizeFilter(window, ScaleSlider));
                    $Jssor$.$AddEvent(window, "orientationchange", ScaleSlider);
                    //responsive code end
                };
            </script>
            <!-- Jssor Slider Begin -->
            <!-- To move inline styles to css file/block, please specify a class name for each element. -->
            <div id="slider1_container" style="position: relative; margin: 0 auto; top: 0px; left: 0px; width: 80%; height: 300px;  overflow: hidden;">
                <!-- Loading Screen -->
                <div u="loading" style="position: absolute; top: 0px; left: 0px;">
                    <div style="filter: alpha(opacity=70); opacity: 0.7; position: absolute; display: block; top: 0px; left: 0px; width: 100%; height: 100%;">
                    </div>
                    <div style="position: absolute; display: block; background: url(../img/loading.gif) no-repeat center center; top: 0px; left: 0px; width: 100%; height: 100%;">
                    </div>
                </div>
                <!-- Slides Container -->
                <div u="slides" style="cursor: move; position: absolute; left: 0px; top: 0px; width: 1300px; height: 500px; overflow: hidden;">
                    <!--slide image1-->
                    <div>
                        <img u="image" src="/Images/slider/slider_06.jpg" />
                        <div style="position: absolute; width: 480px; height: 120px; top: 30px; left: 30px; padding: 5px; text-align: left; line-height: 60px; text-transform: uppercase; font-size: 50px; color: #FFFFFF;">
                            <h4>Welcome to CooksCorner</h4>
                        </div>
                    </div>

                    <!--slide image3-->
                    <div>
                        <img u="image" src="/Images/slider/slider_02.jpg" />
                        <div style="position: absolute; width: 480px; height: 120px; top: 30px; left: 30px; padding: 5px; text-align: left; line-height: 60px; text-transform: uppercase; font-size: 50px; color: #FFFFFF;">
                            <h4>Welcome to CooksCorner</h4>
                        </div>
                    </div>

                    <!--slide image3-->
                    <div>
                        <img u="image" src="/Images/slider/slider_01.jpg" />
                        <div style="position: absolute; width: 480px; height: 120px; top: 30px; left: 30px; padding: 5px; text-align: left; line-height: 60px; text-transform: uppercase; font-size: 50px; color: #FFFFFF;">
                            <h4>Welcome to CooksCorner</h4>
                        </div>
                    </div>
                </div>

                
                <!-- bullet navigator container -->
                <div u="navigator" class="jssorb21" style="bottom: 26px; right: 6px;">
                    <!-- bullet navigator item prototype -->
                    <div u="prototype"></div>
                </div>
                
                <!-- Arrow Left -->
                <span u="arrowleft" class="jssora21l" style="top: 123px; left: 8px;"></span>
                <!-- Arrow Right -->
                <span u="arrowright" class="jssora21r" style="top: 123px; right: 8px;"></span>
                <!--#endregion Arrow Navigator Skin End -->
                <a style="display: none" href="http://www.jssor.com">Slider Javascript</a>
            </div>
            <!-- Trigger -->
            <script>
                jssor_slider1_starter('slider1_container');
            </script>
            <!-- Jssor Slider End -->


            <div class="vertical-space-big"></div>
            <article class="col-md-12" style="height: 30px;">
                        <h4 class="small" style="margin-left:0px;">Latest two Video Recipes</h4>
                    </article>
            <div class="vertical-space-small"></div>
            <div class="row">
                <div class="col-md-9">
                    
                    <article class="col-md-5 give-margin" >
                        @foreach (var video in ViewBag.video1)
                        { 
                            <a href="home/details/@video.VideoId">
                                <h4 class="small">@video.Title</h4>
                            </a>
                            <iframe src="@video.VideortUrl" frameborder="0" allowfullscreen></iframe>
                        }

                    </article>
                    
                    <article class="col-md-5 give-margin" >
                        @foreach (var video in ViewBag.video2)
                        { 
                            <a href="home/details/@video.VideoId">
                                <h4 class="small">@video.Title</h4>
                            </a>
                            <iframe src="@video.VideortUrl" frameborder="0" allowfullscreen></iframe>
                        }
                    </article>
                    <article class="vertical-space-big"></article>
                    <article class="vertical-space-big"></article>
                    <article class="col-md-12" style="height: 30px;">
                        <h4 class="small" style="margin-left:0px;">Latest two Written Recipes</h4>
                    </article>
                    <div class="vertical-space-medium"></div>
                    
                    <article class="col-md-5 give-margin">
                        @foreach (var article in ViewBag.article1)
                    { 
                            <a href="/home/WrittenDetail/@article.Id">
                                <h4 class="small">@article.Title</h4>
                            </a>
                            <p>@Html.Raw(@article.Description.Substring(0, Math.Min(@article.Description.Length, 125)))...</p>
                    }
                    </article>
                    
                    <article class="col-md-5 give-margin">
                        @foreach (var article in ViewBag.article2)
                    { 
                            <a href="/home/WrittenDetail/@article.Id" >
                                <h4 class="small">@article.Title</h4>
                            </a>
                            <p>@Html.Raw(@article.Description.Substring(0, Math.Min(@article.Description.Length, 125)))...</p>
                    }
                    </article>
                </div>

                <div class="col-md-3">
                    <article class="margin-right">
                        <h4 class="small">Video Recipe Category</h4>
                        @foreach (var item in Model)
                    {
                            <p class="category-item">@Html.ActionLink(item.Name, "Browse", new { id = item.GenreId })</p> 
                    }
                        <h4 class="small">Written Recipe Category</h4>
                        @foreach (var category in Model)
                        {
                            <p class="category-item">@Html.ActionLink(category.Name, "BrowseWritten", new { id = category.GenreId })</p>
                        }


                    </article>
                </div>
            </div>

        </section>
        <div class="block"></div>
    </div>
</div>

<script>
    if ('@ViewBag.subscription' == "success") {
        alert("Congratulation, you successfully subcribe this site");
    }
</script>
